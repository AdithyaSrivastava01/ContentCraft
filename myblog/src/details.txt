First add tailwindcss in your project as dev dependencies and use postcss cli to 
use it in your project

npm install tailwindcss -D
-D represent it is a devDependency
npm install postcss-cli -D
npm install autoprefixer npm-run-all postcss -D

then make changes in scripts in the package.json file


add functions like build css to build the tailwindcss and watch css to see the changes in the css file

and -p means run parallely and -s is run sequentially.

A command-line interface (CLI)


make a folder called styles and in that add index.css and change the contents as 
@tailwind base;
@tailwind components;
@tailwind utilities;
then create an empty css file tailwind.css and when we say npm start the postcss will build the taildwind.css file and the 
css code will be autogenerated into the tailwind.css file.



In the postcss.config.js file include the plugins of tailwindcss and autoprefixers
Autoprefixer. The autoprefixer is a PostCSS plugin to parse CSS and add vendor prefixes to CSS rules using values from Can I Use. 
It allows you to write your CSS rules without vendor prefixes, 
it takes care of doing that based on current browser popularity and property support.

 npx tailwindcss-cli@latest init
 the above command is used to initialize the tailwind.config.js file which will act as a interface with the 
 css files
 go to the purge keyword and add
purge: ["./src/**/*.{html,js}"],
this means the tailwind.css will add all the styles to each and every html and js files


 "react-scripts:start": "timeout 5 && react-scripts start",

 timeout for windows and sleep for mac users.


